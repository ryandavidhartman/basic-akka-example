# Absolute path to the default journal plugin configuration entry.
#pekko.persistence.journal.plugin = "pekko.persistence.journal.inmem"
#

# Absolute path to the default snapshot store plugin configuration entry.
#pekko.persistence.snapshot-store.plugin = "pekko.persistence.snapshot-store.local"

pekko {
  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

# the pekko-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
}

# the pekko-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}

# the pekko-persistence-jdbc provider in use for durable state store
jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.H2Profile$"
  db {
    url = "jdbc:h2:mem:test-database;DATABASE_TO_UPPER=false;"
    user = "root"
    password = "root"
    driver = "org.h2.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}



# We want to address this by using ProtBuf and setting up a DLQ
pekko.actor.allow-java-serialization = on
pekko.actor.warn-about-java-serializer-usage = off
pekko.log-dead-letters = off

